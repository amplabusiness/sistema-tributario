name: 🚀 Deploy Frontend Vite - Sistema Tributário IA

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'

jobs:
  # 🌟 TESTES E VALIDAÇÃO
  test:
    name: 🧪 Testes e Validação
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Instalar dependências
      run: npm ci
      
    - name: 🔍 Lint
      run: npm run lint
      
    - name: 🧪 Testes TypeScript
      run: npx tsc --noEmit
      
    - name: 🏗️ Build de teste
      run: npm run build
      
    - name: 📊 Verificar tamanho do bundle
      run: |
        echo "📦 Tamanho do build:"
        du -sh dist/
        echo "📁 Arquivos gerados:"
        ls -la dist/

  # 🌟 DEPLOY STAGING
  deploy-staging:
    name: 🚀 Deploy Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Instalar dependências
      run: npm ci
      
    - name: 🏗️ Build para staging
      run: npm run build
      env:
        VITE_APP_ENV: staging
        VITE_API_URL: https://staging-api.conttatax.com.br
        
    - name: 🚀 Deploy Vercel (Staging)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

  # 🌟 DEPLOY PRODUÇÃO
  deploy-production:
    name: 🚀 Deploy Produção
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Instalar dependências
      run: npm ci
      
    - name: 🏗️ Build para produção
      run: npm run build
      env:
        VITE_APP_ENV: production
        VITE_API_URL: https://api.conttatax.com.br
        
    - name: 🚀 Deploy Vercel (Produção)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: ✅ Verificar deploy
      run: |
        echo "🌐 Verificando deploy em produção..."
        sleep 30
        curl -f https://www.conttatax.com.br || exit 1
        
    - name: 📊 Notificar sucesso
      run: |
        echo "🎉 Deploy realizado com sucesso!"
        echo "🌐 URL: https://www.conttatax.com.br"
        echo "📅 Data: $(date)"
        echo "🔗 Commit: ${{ github.sha }}"

  # 🌟 MONITORAMENTO PÓS-DEPLOY
  monitor:
    name: 📊 Monitoramento
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 🔍 Verificar performance
      run: |
        echo "📊 Verificando performance..."
        curl -w "@curl-format.txt" -o /dev/null -s https://www.conttatax.com.br
        
    - name: 🔒 Verificar headers de segurança
      run: |
        echo "🔒 Verificando headers de segurança..."
        curl -I https://www.conttatax.com.br | grep -E "(X-Frame-Options|X-Content-Type-Options|X-XSS-Protection|Content-Security-Policy)"
        
    - name: 📈 Relatório de deploy
      run: |
        echo "📈 RELATÓRIO DE DEPLOY"
        echo "===================="
        echo "✅ Build: Sucesso"
        echo "✅ Deploy: Sucesso"
        echo "✅ Verificação: Sucesso"
        echo "🌐 URL: https://www.conttatax.com.br"
        echo "📅 Timestamp: $(date -u)"
        echo "🔗 Commit: ${{ github.sha }}"
        echo "👤 Autor: ${{ github.actor }}"

# 🌟 TEMPLATE PARA curl-format.txt
# time_namelookup:  %{time_namelookup}\n
# time_connect:  %{time_connect}\n
# time_appconnect:  %{time_appconnect}\n
# time_pretransfer:  %{time_pretransfer}\n
# time_redirect:  %{time_redirect}\n
# time_starttransfer:  %{time_starttransfer}\n
# time_total:  %{time_total}\n 